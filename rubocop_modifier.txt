Inspecting 1 file
W

Offenses:

modifier.rb:1:40: C: Space missing after comma.
require File.expand_path('lib/combiner',File.dirname(__FILE__))
                                       ^
modifier.rb:6:19: C: Space inside string interpolation detected.
  files = Dir["#{ ENV["HOME"] }/workspace/*#{name}*.txt"]
                  ^^^^^^^^^^^
modifier.rb:6:23: C: Prefer single-quoted strings inside interpolations.
  files = Dir["#{ ENV["HOME"] }/workspace/*#{name}*.txt"]
                      ^^^^^^
modifier.rb:10:38: W: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the [33m/[0m if it should be a division.
    last_date = last_date.to_s.match /\d+-\d+-\d+/
                                     ^
modifier.rb:21:1: C: Missing top-level class documentation comment.
class String
^^^^^
modifier.rb:23:5: C: Redundant [33mself[0m detected.
    self.gsub(',', '.').to_f
    ^^^^^^^^^^^^^^^^^^^
modifier.rb:27:1: C: Missing top-level class documentation comment.
class Float
^^^^^
modifier.rb:29:5: C: Redundant [33mself[0m detected.
    self.to_s.gsub('.', ',')
    ^^^^^^^^^
modifier.rb:33:1: C: Class has too many lines. [129/100]
class Modifier
^^^^^
modifier.rb:33:1: C: Missing top-level class documentation comment.
class Modifier
^^^^^
modifier.rb:34:1: C: Extra empty line detected at class body beginning.
modifier.rb:36:81: C: Line is too long. [224/80]
  LAST_VALUE_WINS = ['Account ID', 'Account Name', 'Campaign', 'Ad Group', 'Keyword', 'Keyword Type', 'Subid', 'Paused', 'Max CPC', 'Keyword Unique ID', 'ACCOUNT', 'CAMPAIGN', 'BRAND', 'BRAND+CATEGORY', 'ADGROUP', 'KEYWORD']
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
modifier.rb:38:81: C: Line is too long. [166/80]
  INT_VALUES = ['Clicks', 'Impressions', 'ACCOUNT - Clicks', 'CAMPAIGN - Clicks', 'BRAND - Clicks', 'BRAND+CATEGORY - Clicks', 'ADGROUP - Clicks', 'KEYWORD - Clicks']
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
modifier.rb:41:20: C: Separate every 3 digits in the integer portion of a number with underscores(_).
  LINES_PER_FILE = 120000
                   ^^^^^^
modifier.rb:48:3: C: Assignment Branch Condition size for modify is too high. [28.91/15]
  def modify(output, input)
  ^^^
modifier.rb:48:3: C: Cyclomatic complexity for modify is too high. [7/6]
  def modify(output, input)
  ^^^
modifier.rb:48:3: C: Method has too many lines. [41/10]
  def modify(output, input)
  ^^^
modifier.rb:58:7: C: Use [33mKernel#loop[0m for infinite loops.
      while true
      ^^^^^
modifier.rb:58:13: W: Literal [33mtrue[0m appeared in a condition.
      while true
            ^^^^
modifier.rb:72:5: C: Favor [33muntil[0m over [33mwhile[0m for negative conditions.
    while not done do
    ^^^^^^^^^^^^^^^^^
modifier.rb:72:11: C: Use [33m![0m instead of [33mnot[0m.
    while not done do
          ^^^
modifier.rb:72:20: C: Do not use [33mdo[0m with multi-line [33mwhile[0m.
    while not done do
                   ^^
modifier.rb:73:50: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      CSV.open(file_name + "_#{file_index}.txt", "wb", { :col_sep => "\t", :headers => :first_row, :row_sep => "\r\n" }) do |csv|
                                                 ^^^^
modifier.rb:73:56: C: Redundant curly braces around a hash parameter.
      CSV.open(file_name + "_#{file_index}.txt", "wb", { :col_sep => "\t", :headers => :first_row, :row_sep => "\r\n" }) do |csv|
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
modifier.rb:73:58: C: Use the new Ruby 1.9 hash syntax.
      CSV.open(file_name + "_#{file_index}.txt", "wb", { :col_sep => "\t", :headers => :first_row, :row_sep => "\r\n" }) do |csv|
                                                         ^^^^^^^^^^^
modifier.rb:73:76: C: Use the new Ruby 1.9 hash syntax.
      CSV.open(file_name + "_#{file_index}.txt", "wb", { :col_sep => "\t", :headers => :first_row, :row_sep => "\r\n" }) do |csv|
                                                                           ^^^^^^^^^^^
modifier.rb:73:81: C: Line is too long. [129/80]
      CSV.open(file_name + "_#{file_index}.txt", "wb", { :col_sep => "\t", :headers => :first_row, :row_sep => "\r\n" }) do |csv|
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
modifier.rb:73:100: C: Use the new Ruby 1.9 hash syntax.
      CSV.open(file_name + "_#{file_index}.txt", "wb", { :col_sep => "\t", :headers => :first_row, :row_sep => "\r\n" }) do |csv|
                                                                                                   ^^^^^^^^^^^
modifier.rb:79:13: C: Favor [33munless[0m over [33mif[0m for negative conditions.
            if not headers_written
            ^^^^^^^^^^^^^^^^^^^^^^
modifier.rb:79:16: C: Use [33m![0m instead of [33mnot[0m.
            if not headers_written
               ^^^
modifier.rb:82:26: C: Surrounding space missing for operator [33m+=[0m.
              line_count +=1
                         ^^
modifier.rb:85:24: C: Surrounding space missing for operator [33m+=[0m.
            line_count +=1
                       ^^
modifier.rb:106:3: C: Assignment Branch Condition size for combine_values is too high. [40.11/15]
  def combine_values(hash)
  ^^^
modifier.rb:106:3: C: Method has too many lines. [19/10]
  def combine_values(hash)
  ^^^
modifier.rb:111:29: C: Use [33mreverse.find[0m instead of [33mselect.last[0m.
      hash[key] = hash[key].select {|v| not (v.nil? or v == 0 or v == '0' or v == '')}.last
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
modifier.rb:111:36: C: Space between { and | missing.
      hash[key] = hash[key].select {|v| not (v.nil? or v == 0 or v == '0' or v == '')}.last
                                   ^^
modifier.rb:111:41: C: Use [33m![0m instead of [33mnot[0m.
      hash[key] = hash[key].select {|v| not (v.nil? or v == 0 or v == '0' or v == '')}.last
                                        ^^^
modifier.rb:111:53: C: Use [33m||[0m instead of [33mor[0m.
      hash[key] = hash[key].select {|v| not (v.nil? or v == 0 or v == '0' or v == '')}.last
                                                    ^^
modifier.rb:111:63: C: Use [33m||[0m instead of [33mor[0m.
      hash[key] = hash[key].select {|v| not (v.nil? or v == 0 or v == '0' or v == '')}.last
                                                              ^^
modifier.rb:111:75: C: Use [33m||[0m instead of [33mor[0m.
      hash[key] = hash[key].select {|v| not (v.nil? or v == 0 or v == '0' or v == '')}.last
                                                                          ^^
modifier.rb:111:81: C: Line is too long. [91/80]
      hash[key] = hash[key].select {|v| not (v.nil? or v == 0 or v == '0' or v == '')}.last
                                                                                ^^^^^^^^^^^
modifier.rb:111:86: C: Space missing inside }.
      hash[key] = hash[key].select {|v| not (v.nil? or v == 0 or v == '0' or v == '')}.last
                                                                                     ^
modifier.rb:120:81: C: Line is too long. [84/80]
      hash[key] = (@cancellation_factor * hash[key][0].from_german_to_f).to_german_s
                                                                                ^^^^
modifier.rb:122:81: C: Line is too long. [224/80]
    ['Commission Value', 'ACCOUNT - Commission Value', 'CAMPAIGN - Commission Value', 'BRAND - Commission Value', 'BRAND+CATEGORY - Commission Value', 'ADGROUP - Commission Value', 'KEYWORD - Commission Value'].each do |key|
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
modifier.rb:123:81: C: Line is too long. [105/80]
      hash[key] = (@cancellation_factor * @saleamount_factor * hash[key][0].from_german_to_f).to_german_s
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
modifier.rb:128:3: C: Method has too many lines. [15/10]
  def combine_hashes(list_of_rows)
  ^^^
modifier.rb:146:27: C: Use the new Ruby 1.9 hash syntax.
  DEFAULT_CSV_OPTIONS = { :col_sep => "\t", :headers => :first_row }
                          ^^^^^^^^^^^
modifier.rb:146:45: C: Use the new Ruby 1.9 hash syntax.
  DEFAULT_CSV_OPTIONS = { :col_sep => "\t", :headers => :first_row }
                                            ^^^^^^^^^^^
modifier.rb:161:22: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    CSV.open(output, "wb", { :col_sep => "\t", :headers => :first_row, :row_sep => "\r\n" }) do |csv|
                     ^^^^
modifier.rb:161:28: C: Redundant curly braces around a hash parameter.
    CSV.open(output, "wb", { :col_sep => "\t", :headers => :first_row, :row_sep => "\r\n" }) do |csv|
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
modifier.rb:161:30: C: Use the new Ruby 1.9 hash syntax.
    CSV.open(output, "wb", { :col_sep => "\t", :headers => :first_row, :row_sep => "\r\n" }) do |csv|
                             ^^^^^^^^^^^
modifier.rb:161:48: C: Use the new Ruby 1.9 hash syntax.
    CSV.open(output, "wb", { :col_sep => "\t", :headers => :first_row, :row_sep => "\r\n" }) do |csv|
                                               ^^^^^^^^^^^
modifier.rb:161:72: C: Use the new Ruby 1.9 hash syntax.
    CSV.open(output, "wb", { :col_sep => "\t", :headers => :first_row, :row_sep => "\r\n" }) do |csv|
                                                                       ^^^^^^^^^^^
modifier.rb:161:81: C: Line is too long. [101/80]
    CSV.open(output, "wb", { :col_sep => "\t", :headers => :first_row, :row_sep => "\r\n" }) do |csv|
                                                                                ^^^^^^^^^^^^^^^^^^^^^
modifier.rb:169:3: C: Keep a blank line before and after [33mpublic[0m.
  public
  ^^^^^^
modifier.rb:177:5: C: Redundant [33mreturn[0m detected.
    return output
    ^^^^^^
modifier.rb:187:6: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
puts "DONE modifying"
     ^^^^^^^^^^^^^^^^

1 file inspected, 57 offenses detected
